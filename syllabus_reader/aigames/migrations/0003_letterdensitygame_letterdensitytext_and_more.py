# Generated by Django 5.2.1 on 2025-07-29 13:13

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('aigames', '0002_team_gameresource_teamgameparticipation_team_games_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='LetterDensityGame',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('target_letter', models.CharField(help_text="The letter that appears in excess in 'dense' texts", max_length=1)),
                ('is_active', models.BooleanField(default=True)),
                ('is_complete', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('ai_game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='letter_density_games', to='aigames.aigame')),
                ('creator_team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_letter_games', to='aigames.team')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='LetterDensityText',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text_content', models.TextField(help_text='The actual text content')),
                ('is_dense', models.BooleanField(help_text='True if this text contains excess of the target letter')),
                ('order_position', models.PositiveIntegerField(default=0, help_text='Order in which this text should be presented')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='texts', to='aigames.letterdensitygame')),
            ],
            options={
                'ordering': ['game', 'order_position'],
                'unique_together': {('game', 'order_position')},
            },
        ),
        migrations.CreateModel(
            name='LetterDensityGuess',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('guessed_letter', models.CharField(help_text='The letter the team thinks is in excess', max_length=1)),
                ('text_classifications', models.JSONField(help_text='JSON mapping text IDs to dense/not dense predictions')),
                ('confidence_score', models.FloatField(blank=True, help_text='Overall confidence in the guess (0-100)', null=True)),
                ('is_submitted', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('submitted_at', models.DateTimeField(blank=True, null=True)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='guesses', to='aigames.letterdensitygame')),
                ('guessing_team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='letter_density_guesses', to='aigames.team')),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('game', 'guessing_team')},
            },
        ),
        migrations.CreateModel(
            name='AIAgentPrediction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('predicted_dense', models.BooleanField(help_text='AI prediction: is this text dense?')),
                ('confidence', models.FloatField(help_text='AI confidence score (0-100)')),
                ('reasoning', models.TextField(blank=True, help_text="AI's reasoning for this prediction")),
                ('texts_seen_so_far', models.PositiveIntegerField(help_text='How many texts the AI had seen when making this prediction')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ai_predictions', to='aigames.letterdensitygame')),
                ('text', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ai_predictions', to='aigames.letterdensitytext')),
            ],
            options={
                'ordering': ['game', 'texts_seen_so_far', 'text__order_position'],
                'unique_together': {('game', 'text', 'texts_seen_so_far')},
            },
        ),
    ]
